name: Validate and Publish Docker Images

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-images:
    name: Docker Build and Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      matrix:
        service:
          - name: chat-sd
            context: ./chat-sd/app
            dockerfile: ./chat-sd/app/Dockerfile
          - name: chat-web
            context: ./chat-web/app
            dockerfile: ./chat-web/app/Dockerfile
          - name: chat-messages
            context: ./chat-messages/app
            dockerfile: ./chat-messages/app/Dockerfile
          - name: chat-ws
            context: ./chat-ws/app
            dockerfile: ./chat-ws/app/Dockerfile
          - name: chat-presence
            context: ./chat-presence/app
            dockerfile: ./chat-presence/app/Dockerfile
          - name: mesh-compose
            context: ./mesh
            dockerfile: ./mesh/Dockerfile
          - name: init-cassandra
            context: ./cassandra
            dockerfile: ./cassandra/init.Dockerfile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Inject runtime config.js for chat-web
        if: matrix.service.name == 'chat-web'
        run: |
          mkdir -p ./chat-web/app/public
          cat <<EOF > ./chat-web/app/public/config.js
          window.VITE_APP_SERVICE_DISCOVERY_URL = "http://localhost:8888";
          window.VITE_APP_MESSAGING_SERVICE_URL = "http://localhost:5678";
          window.VITE_APP_PRESENCE_URL = "http://localhost:7777";
          window.VITE_APP_FEDERATED_GRAPH = "http://localhost:4000";
          window.VITE_APP_ENABLE_GRAPH = "true";
          window.VITE_APP_DISABLE_CHAT_SD = "true";
          window.VITE_APP_WS_URL = "localhost:4321";
          EOF

      - name: Log in to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and optionally push ${{ matrix.service.name }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: ${{ github.event_name == 'push' }}
          tags: ${{ github.event_name == 'push' && format('{0}/{1}:latest', secrets.DOCKERHUB_USER, matrix.service.name) || '' }}
