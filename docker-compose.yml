version: "3.8"

services:
  redis-container:
    image: redis:latest
    container_name: redis-container
    networks:
      - chat-net
      - elk-net
    ports:
      - "6379:6379"
    restart: always

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    networks:
      - chat-net
      - elk-net
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    networks:
      - chat-net
      - elk-net
    ports:
      - "9042:9042"
      - "9160:9160"
    environment:
      - MAX_HEAP_SIZE=512M
      - HEAP_NEWSIZE=100M
    volumes:
      - cassandra-data:/var/lib/cassandra

  init-cassandra:
    image: init-cassandra # dedder98/init-cassandra:latest
    # platform: linux/amd64
    container_name: init-cassandra
    build:
      context: ./cassandra
      dockerfile: init.Dockerfile
    networks:
      - chat-net
      - elk-net
    depends_on:
      - cassandra
    restart: "no"

  chat-sd:
    image: chat-sd # dedder98/chat-sd:latest
    # platform: linux/amd64
    container_name: chat-sd
    build:
      context: ./chat-sd/app
      dockerfile: Dockerfile
    networks:
      - chat-net
      - elk-net
    ports:
      - "8888:8888"
    environment:
      - FRONTEND_URL=http://localhost:3000
      - REDIS_HOST=redis-container
      - REDIS_PORT=6379
    depends_on:
      - redis-container
      - init-cassandra
    restart: always

  chat-messages:
    image: chat-messages # dedder98/chat-messages:latest
    # platform: linux/amd64
    container_name: chat-messages
    build:
      context: ./chat-messages/app
      dockerfile: Dockerfile
    networks:
      - chat-net
      - elk-net
    ports:
      - "5678:5678"
    environment:
      - FRONTEND_URL=http://localhost:3000
      - RABBITMQ_URL=amqp://rabbitmq
      - CASSANDRA_POINT=cassandra
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5044
    depends_on:
      - redis-container
      - init-cassandra
    restart: always

  chat-ws:
    image: chat-ws # dedder98/chat-ws:latest
    # platform: linux/amd64
    container_name: chat-ws
    build:
      context: ./chat-ws/app
      dockerfile: Dockerfile
    networks:
      - chat-net
      - elk-net
    ports:
      - "4321:4321"
    environment:
      - SERVER_HOST=http://localhost:7777
      - REDIS_HOST=redis-container
      - REDIS_PORT=6379
      - PORT=4321
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      - redis-container
      - init-cassandra
    restart: always

  chat-web:
    image: chat-web # dedder98/chat-web:latest
    container_name: chat-web
    build:
      context: ./chat-web/app
      dockerfile: Dockerfile
    networks:
      - chat-net
      - elk-net
    ports:
      - "3000:80"
    environment:
      - VITE_APP_SERVICE_DISCOVERY_URL=http://localhost:8888
      - VITE_APP_MESSAGING_SERVICE_URL=http://localhost:5678
      - VITE_APP_PRESENCE_URL=http://localhost:7777
      - VITE_APP_FEDERATED_GRAPH=http://localhost:4000
      - VITE_APP_ENABLE_GRAPH=true
      - VITE_APP_DISABLE_CHAT_SD=true
      - VITE_APP_WS_URL=localhost:4321
    depends_on:
      - chat-sd
      - chat-messages
      - chat-ws
      - chat-presence
    restart: always

  chat-presence:
    image: chat-presence # dedder98/chat-presence:latest
    # platform: linux/amd64
    container_name: chat-presence
    build:
      context: ./chat-presence/app
      dockerfile: Dockerfile
    networks:
      - chat-net
      - elk-net
    ports:
      - "7777:7777"
    environment:
      - FRONTEND_URL=http://localhost:3000
      - RABBITMQ_URL=amqp://rabbitmq
      - CASSANDRA_POINT=cassandra
    depends_on:
      - redis-container
      - init-cassandra
    restart: always

  hive-gateway:
    image: ghcr.io/graphql-hive/gateway
    container_name: mesh
    networks:
      - chat-net
      - elk-net
    ports:
      - "4000:4000"
    volumes:
      - ./mesh/supergraph-compose.graphql:/gateway/supergraph.graphql
    command: supergraph /gateway/supergraph.graphql
    depends_on:
      - chat-messages
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/compose-config.yml:/etc/prometheus/prometheus.yml
    networks:
      - chat-net
      - elk-net
    restart: always

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "6767:3000"
    networks:
      - chat-net
      - elk-net
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - PROMETHEUS_URL=http://prometheus:9090
    restart: always

networks:
  chat-net:
    driver: bridge
  elk-net:
    external: true

volumes:
  cassandra-data: