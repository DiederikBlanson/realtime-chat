version: "3.8"

services:
  redis-container:
    image: redis:latest
    container_name: redis-container
    networks:
      - chat_network
    ports:
      - "6379:6379"
    restart: always

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    networks:
      - chat_network
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    networks:
      - chat_network
    ports:
      - "9042:9042"
      - "9160:9160"
    volumes:
      - cassandra-data:/var/lib/cassandra

  init-cassandra:
    build:
      context: ./cassandra
      dockerfile: cassandra/init.Dockerfile
    networks:
      - chat_network
    depends_on:
      - cassandra
    restart: "no"

  chat-sd:
    image: chat-sd
    container_name: chat-sd
    build:
      context: ./chat-sd/app
      dockerfile: Dockerfile
    networks:
      - chat_network
    ports:
      - "8888:8888"
    environment:
      - FRONTEND_URL=http://localhost:3000
      - REDIS_HOST=redis-container
      - REDIS_PORT=6379
    depends_on:
      - redis-container
      - init-cassandra
    restart: always

  chat-messages:
    image: chat-messages
    container_name: chat-messages
    build:
      context: ./chat-messages/app
      dockerfile: Dockerfile
    networks:
      - chat_network
    ports:
      - "5678:5678"
    environment:
      - FRONTEND_URL=http://localhost:3000
      - RABBITMQ_URL=amqp://rabbitmq
      - CASSANDRA_POINT=cassandra
    depends_on:
      - redis-container
      - init-cassandra
    restart: always

  chat-ws:
    image: chat-ws
    container_name: chat-ws
    build:
      context: ./chat-ws/app
      dockerfile: Dockerfile
    networks:
      - chat_network
    ports:
      - "4321:4321"
    environment:
      - SERVER_HOST=http://localhost:7777
      - REDIS_HOST=redis-container
      - REDIS_PORT=6379
      - PORT=4321
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      - redis-container
      - init-cassandra
    restart: always

  chat-web:
    image: chat-web
    container_name: chat-web
    build:
      context: ./chat-web/app
      dockerfile: Dockerfile
    networks:
      - chat_network
    ports:
      - "3000:80"
    environment:
      - VITE_APP_SERVICE_DISCOVERY_URL=http://localhost:8888
      - VITE_APP_MESSAGING_SERVICE_URL=http://localhost:5678
      - VITE_APP_PRESENCE_URL=http://localhost:7777
      - VITE_APP_FEDERATED_GRAPH=http://localhost:4000
      - VITE_APP_ENABLE_GRAPH=true
      - VITE_APP_DISABLE_CHAT_SD=true
      - VITE_APP_WS_URL=localhost:4321
    depends_on:
      - chat-sd
      - chat-messages
      - chat-ws
      - chat-presence
    restart: always

  chat-presence:
    image: chat-presence
    container_name: chat-presence
    build:
      context: ./chat-presence/app
      dockerfile: Dockerfile
    networks:
      - chat_network
    ports:
      - "7777:7777"
    environment:
      - FRONTEND_URL=http://localhost:3000
      - RABBITMQ_URL=amqp://rabbitmq
      - CASSANDRA_POINT=cassandra
    depends_on:
      - redis-container
      - init-cassandra
    restart: always

  mesh:
    # The url's in the supergraph.graphql are not localhost but the name of the services.
    # Create a mesh-compose container and replace the url's in the schema.
    image: mesh-compose
    container_name: mesh
    networks:
      - chat_network
    ports:
      - "4000:4000"
    environment:
      - MESSAGING_SERVICE_URL=http://chat-messages:5678
    depends_on:
      - chat-messages
    restart: always

  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - chat_network
    restart: always

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "6767:3000"
    networks:
      - chat_network

networks:
  chat_network:
    driver: bridge

volumes:
  cassandra-data: